{"ast":null,"code":"var _jsxFileName = \"/home/gm/UBIQUM/projects/ubiqum-bootcamp/staff/genis-mestres/course-3/proyecto3/src/components/Chat.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState } from 'react';\nimport { useParams } from \"react-router-dom/cjs/react-router-dom.min\";\nimport { useCollectionData } from 'react-firebase-hooks/firestore';\nimport { getAuth } from 'firebase/auth';\nimport logo from '../assets/img/nysl_logo.png';\nimport { collection, query, orderBy, limit, where, getFirestore, addDoc, serverTimestamp } from \"firebase/firestore\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst auth = getAuth(); //db conection\n\nfunction ChatRoom() {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const dummy = useRef();\n  const db = getFirestore();\n  const messagesRef = collection(db, 'messages'); //const q =  query(messagesRef, orderBy(\"timestamp\"), limit(20));\n  // creamos una query e\n\n  const q = query(messagesRef, where(\"game\", \"==\", `${id}`), orderBy(\"timestamp\"));\n  const [messages] = useCollectionData(q, {\n    idField: 'id'\n  });\n  const [formValue, setFormValue] = useState(''); //test await function to try to filter the messages by date once the query has filtered them by game:id\n\n  /*\r\n  const messages1 = async () => {\r\n    let messageRef = collection(db,'messages');\r\n    let [allmessageRef] = await  useCollectionData(q, { idField: 'id' });\r\n   console.log(allmessageRef)\r\n  }\r\n  console.log(messages1,'oooo');\r\n  */\n  //message writing\n\n  const sendMessage = async e => {\n    e.preventDefault();\n    const {\n      uid,\n      photoURL,\n      displayName\n    } = auth.currentUser; //addDoc push all the messages, await para que espere a que es escriba el emnsaje\n\n    await addDoc(collection(db, 'messages'), {\n      uid,\n      text: formValue,\n      timestamp: serverTimestamp(),\n      game: id,\n      photoURL,\n      displayName\n    }); //scroll down when new message and message button\n\n    setFormValue('');\n    dummy.current.scrollIntoView({\n      behavior: 'smooth'\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"main\", {\n      children: [messages && messages.map(msg => /*#__PURE__*/_jsxDEV(ChatMessage, {\n        message: msg\n      }, msg.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 40\n      }, this)), /*#__PURE__*/_jsxDEV(\"span\", {\n        ref: dummy\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: sendMessage,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: formValue,\n        onChange: e => setFormValue(e.target.value),\n        placeholder: \"say something nice\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: !formValue,\n        children: \"\\u26BD\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n\n_s(ChatRoom, \"jwa97WBlMeO3SGK03JrqChGj6Ac=\", false, function () {\n  return [useParams, useCollectionData];\n});\n\n_c = ChatRoom;\n; //message body\n//uid es una id de usuario, alfanumÃ©rico\n\nfunction ChatMessage(props) {\n  const {\n    text,\n    uid,\n    photoURL,\n    displayName\n  } = props.message;\n  const messageClass = uid === auth.currentUser.uid ? 'sent' : 'received';\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `message ${messageClass}`,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        alt: \"userPhoto\",\n        src: photoURL || logo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          flexDirection: 'column'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          id: \"userName\",\n          children: displayName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: `${text}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n}\n\n_c2 = ChatMessage;\n;\nexport { ChatRoom };\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ChatRoom\");\n$RefreshReg$(_c2, \"ChatMessage\");","map":{"version":3,"sources":["/home/gm/UBIQUM/projects/ubiqum-bootcamp/staff/genis-mestres/course-3/proyecto3/src/components/Chat.js"],"names":["React","useRef","useState","useParams","useCollectionData","getAuth","logo","collection","query","orderBy","limit","where","getFirestore","addDoc","serverTimestamp","auth","ChatRoom","id","dummy","db","messagesRef","q","messages","idField","formValue","setFormValue","sendMessage","e","preventDefault","uid","photoURL","displayName","currentUser","text","timestamp","game","current","scrollIntoView","behavior","map","msg","target","value","ChatMessage","props","message","messageClass","flexDirection"],"mappings":"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","sourcesContent":["import React, { useRef, useState } from 'react';\r\nimport { useParams } from \"react-router-dom/cjs/react-router-dom.min\";\r\nimport {useCollectionData} from 'react-firebase-hooks/firestore';\r\nimport { getAuth } from 'firebase/auth';\r\nimport logo from '../assets/img/nysl_logo.png'\r\nimport { \r\n  collection,\r\n  query,\r\n  orderBy,\r\n  limit,\r\n  where,\r\n  getFirestore,\r\n  addDoc,\r\n  serverTimestamp\r\n} from \"firebase/firestore\";\r\n\r\n\r\nconst auth = getAuth();\r\n\r\n\r\n\r\n\r\n\r\n//db conection\r\nfunction ChatRoom() {\r\n  const {id} = useParams();\r\n  const dummy = useRef();\r\n  const db = getFirestore();\r\n  const messagesRef = collection(db,'messages');\r\n\r\n  //const q =  query(messagesRef, orderBy(\"timestamp\"), limit(20));\r\n\r\n  // creamos una query e\r\n  const q = query(messagesRef, where(\"game\",\"==\",`${id}`), orderBy(\"timestamp\"));\r\n\r\n  const [messages] = useCollectionData(q, { idField: 'id' });\r\n  const [formValue, setFormValue] = useState('');\r\n\r\n//test await function to try to filter the messages by date once the query has filtered them by game:id\r\n/*\r\nconst messages1 = async () => {\r\n  let messageRef = collection(db,'messages');\r\n  let [allmessageRef] = await  useCollectionData(q, { idField: 'id' });\r\n console.log(allmessageRef)\r\n}\r\nconsole.log(messages1,'oooo');\r\n*/\r\n\r\n  //message writing\r\n  const sendMessage = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const { uid, photoURL, displayName } = auth.currentUser;\r\n    //addDoc push all the messages, await para que espere a que es escriba el emnsaje\r\n    await addDoc(collection(db,'messages'),{\r\n      uid,\r\n      text: formValue,\r\n      timestamp: serverTimestamp(),\r\n      game: id,\r\n      photoURL,\r\n      displayName\r\n    })\r\n    //scroll down when new message and message button\r\n    setFormValue('');\r\n    dummy.current.scrollIntoView({ behavior: 'smooth' });\r\n  }\r\n  return (<>\r\n    <main>\r\n\r\n      {messages && messages.map(msg => <ChatMessage key={msg.id} message={msg} />)}\r\n\r\n      <span ref={dummy}></span>\r\n\r\n    </main>\r\n\r\n    <form onSubmit={sendMessage}>\r\n\r\n      <input value={formValue} onChange={(e) => setFormValue(e.target.value)} placeholder=\"say something nice\" />\r\n\r\n      <button type=\"submit\" disabled={!formValue}>â½</button>\r\n\r\n    </form>\r\n  </>)\r\n};\r\n\r\n\r\n//message body\r\n//uid es una id de usuario, alfanumÃ©rico\r\nfunction ChatMessage(props) {\r\n  const { text, uid, photoURL, displayName } = props.message;\r\n  const messageClass = uid === auth.currentUser.uid ? 'sent' : 'received';\r\n\r\n  return (<>\r\n    <div className={`message ${messageClass}`}>\r\n      <img alt='userPhoto' src={photoURL || logo} />\r\n      <div style={{flexDirection: 'column'}}>\r\n        <p id='userName'>{displayName}</p>\r\n        <p>{`${text}`}</p>\r\n      </div>\r\n    </div>\r\n  </>)\r\n};\r\n\r\nexport {ChatRoom};\r\n\r\n"]},"metadata":{},"sourceType":"module"}